
🔗 https://stackoverflow.com/questions/3861634/how-to-reduce-go-compiled-file-size
❓: How to reduce Go compiled file size? - Stack Overflow
  ✅  Oct 5, 2010 ... An 893kb executable is a far cry from "4GB+ of RAM and a huge disk", and as others have already pointed out, this includes the statically linked ...

  📈  111	Jan 15, 2014
  👼  If you are using a Unix-based system (e.g. Linux or Mac OSX) you could try removing the debugging information included in the executable by building it with the -w flag: go build -ldflags "-w"...

  📈  61	May 26, 2016
  👼  The 2016 answer: 1. Use Go 1.7 2. Compile with go build -ldflags "-s -w" ➜ ls -lh hello -rwxr-xr-x 1 oneofone oneofone 976K May 26 20:49 hello* 3. Then use upx, goupx is no longer needed...

  📈  33	Oct 05, 2010
  👼  Note: This answer is outdated Please note that this answer is outdated. Please refer to the other higher-voted answers. I would like to delete this post, accepted answers can't be deleted though....

  📈  25	Oct 05, 2010
  👼  Go binaries are large because they are statically linked (except for library bindings using cgo). Try statically linking a C program and you'll see it grow to a comparable size. If this is...

  📈  21	Oct 27, 2017
  👼  create a file named main.go, let's try with simple hello world program. package main import "fmt" func main(){ fmt.Println("Hello World!") } I use go version 1.9.1 $ go version go version go1.9.1...

  📈  16	Dec 25, 2014
  👼  You should get goupx, it will "fix" Golang ELF executables to work with upx. I've already got around 78% file size shrink in some cases ~16MB >> ~3MB. Compression ratio usually tends to 25%,...

  📈  9	Feb 28, 2013
  👼  More compact hello-world example: package main func main() { print("Hello world!") } We are skiped large fmt package and noticeably reduced binary: $ go build hello.go $ ls -lh hello ... 259K...

  📈  3	Sep 13, 2019
  👼  By default gcc links dynamically and go - statically. But if you link you C code statically, you might get a binary with a bigger size. In my case: go x64 (1.10.3) - generated binary with size...

  📈  2	Jun 16, 2018
  👼  2018 answer for the next Go 1.11, as tweeted by Brad Fitzpatrick (mid-June 2018): As of a few minutes ago, DWARF sections in #golang ELF binaries are now compressed, so at tip binaries are...

  📈  1	Jul 31, 2013
  👼  The binary contains by default the garbage collector, the schedulding system that manage the go routines, and all the libraries you import. The result is a minimal size of about 1 Mb.

  📈  1	Jan 11, 2017
  👼  From Go 1.8 you can also use the new plugin system to split up your binary into something that resembles shared libraries. For this release it only works on Linux, but other platforms will...

#######################################################

🔗 https://stackoverflow.com/questions/28576173/reason-for-huge-size-of-compiled-executable-of-go
❓: Reason for huge size of compiled executable of Go - Stack Overflow
  ✅  Feb 18, 2015 ... We end up with an even smaller binary. This is as small as we can get it without resorting to tricks like UPX-packing, so the overhead of the Go ...

  📈  114	Feb 18, 2015
  👼  This exact question appears in the official FAQ: Why is my trivial program such a large binary? Quoting the answer: The linkers in the gc tool chain (5l, 6l, and 8l) do static linking. All...

  📈  63	Sep 11, 2017
  👼  Consider the following program: package main import "fmt" func main() { fmt.Println("Hello World!") } If I build this on my Linux AMD64 machine (Go 1.9), like this: $ go build $ ls -la helloworld...

  📈  17	Feb 18, 2015
  👼  Note that the binary size issue is tracked by issue 6853 in the golang/go project. For instance, commit a26c01a (for Go 1.4) cut hello world by 70kB: because we don't write those names into...

#######################################################

🔗 https://stackoverflow.com/questions/69085092/is-it-possible-to-make-a-go-binary-smaller-by-compiling-it-with-tinygo
❓: Is it possible to make a Go binary smaller by compiling it with TinyGo ...
  ✅  Sep 7, 2021 ... GOARCH=arm GOOS=linux tinygo build -o example ./... As for how smaller the executable will be compared with one with the official go compiler/ ...

  📈  4	Sep 07, 2021
  👼  tl;dr: basically yes, but you might have to port your program. I wonder if it is possible to use TinyGo to compile go into small binary for ARM/Linux system? Yes (reference: https://tinygo.org/docs...

#######################################################

🔗 https://stackoverflow.com/questions/29008127/why-are-rust-executables-so-huge
❓: Why are Rust executables so huge? - Stack Overflow
  ✅  Mar 12, 2015 ... I found the --release option and created the release build. To my surprise, the .exe size has only become smaller by an insignificant amount: ...

  📈  292	Feb 23, 2019
  👼  By default, the Rust compiler optimizes for execution speed, compilation speed, and ease of debugging (by including symbols, for example), rather than minimal binary size. For an overview of...

  📈  259	Mar 12, 2015
  👼  Rust uses static linking to compile its programs, meaning that all libraries required by even the simplest Hello world! program will be compiled into your executable. This also includes the...

  📈  107	Apr 05, 2015
  👼  I don't have any Windows systems to try on, but on Linux, a statically compiled Rust hello world is actually smaller than the equivalent C. If you are seeing a huge difference in size, it is...

  📈  56	Jan 30, 2016
  👼  When compiling with Cargo, you can use dynamic linking: cargo rustc --release -- -C prefer-dynamic This will dramatically reduce the size of the binary, as it is now dynamically linked. On...

  📈  2	Jan 29, 2023
  👼  #![no_main] #![no_std] #[link(name = "msvcrt", kind = "dylib")] extern { fn puts(ptr: *const u8); // i8 or u8 doesn't matter in this case } #[no_mangle] unsafe extern fn main() { puts("Hello,...

  📈  1	Sep 24, 2021
  👼  Install rust nightly - rustup toolchain install nightly, rustup default nightly Now, make these changes in all the Cargo.toml files in your project. Add cargo-features = ["strip"] before [package]...

  📈  -18	Feb 15, 2018
  👼  This is a feature, not a bug! You can specify the library versions (in the project's associated Cargo.toml file) used in the program (even the implicit ones) to ensure library version compatibility...

#######################################################

🔗 https://stackoverflow.com/questions/2150025/how-to-achieve-smaller-size-of-the-executable
❓: delphi - How to achieve smaller size of the executable? - Stack ...
  ✅  Jan 27, 2010 ... Removing unused units can bring down exe size. Specially if they have init code (that often makes code with RTTI (also non D2010) reachable).

  📈  17	Jan 27, 2010
  👼  Did you do a debug or release build? (Make it release for smaller size, make sure optimization is on, debug information turned off) Did you turn off RTII (delphi 2010 and up) if not needed?...

  📈  13	Jan 27, 2010
  👼  You can try using KOL (Key Objects Library is a set of objects to develop power (but small) 32 bit Windows GUI applications using Delphi but without VCL). KOL allows to create very compact...

  📈  8	Jan 28, 2010
  👼  MapFileStats (DelphiTools.info) is a good (free) tool that allows you to see how much space every unit occupies in your executable. My own tool DelphiUnitSizes is an alternative that in addition...

  📈  6	Jan 27, 2010
  👼  How big is your DFM? It is included as a resource in your EXE. Depending on how complex your GUI is, you might find that creating the GUI at runtime in code could reduce the EXE size.

  📈  3	Dec 14, 2012
  👼  You may also considere to add the following line to the top of the project file: {$SetPEFlags 1} Explanation here : http://hallvards.blogspot.fr/2006/09/hack12-create-smaller-exe-files.html

  📈  2	Jan 27, 2010
  👼  Yes, but then you'd need to supply the other code units as additional files. Just as .net required the assembly, and you have VB runtimes etc., this is just the Delphi runtime - but it's embedded...

  📈  1	Jan 29, 2010
  👼  You say you're coming back to Delphi. If you still have an old version available, use that - every new version adds extra features and if you don't need them them your exes will be smaller...

  📈  0	Jan 28, 2010
  👼  Do you have any resource files or pictures that are linked into the project? I think the ADODB also includes quite some overhead. If your app really uses a database then a mere 1MB isn't too...

#######################################################

